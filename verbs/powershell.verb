# Metadata for PowerShell Wrapper
w_metadata powershell apps \
    title="PowerShell Wrapper For Wine" \
    publisher="ProjectSynchro" \
    year="2024" \
    media="download" \
    file1="powershell32.exe" \
    file2="powershell64.exe" \
    file3="profile.ps1"

load_powershell()
{
    #w_do_call powershell_core

    # Specify version here, and build download URLS from it.
    _load_powershell_version='2.1.0'

    # Download PowerShell Wrapper 32bit exe
    w_download "https://github.com/${publisher}/powershell-wrapper-for-wine/releases/download/v${_load_powershell_version}/${file1}" 379c7252eed3039e9c10cf21a706ca35f87df5315e9501819120d845729768de

    if [ "${W_ARCH}" = "win64" ]; then
        # Download PowerShell Wrapper 64bit exe
        w_download "https://github.com/${publisher}/powershell-wrapper-for-wine/releases/download/v${_load_powershell_version}/${file2}" 325619aa9afa8e84123d303c76a38e5af8b359de520d4096289790265037706c
    fi

    # Download PowerShell Wrapper profile.ps1
    w_download "https://github.com/${publisher}/powershell-wrapper-for-wine/releases/download/v${_load_powershell_version}/${file3}" 85c7d4bc526a0b427cb8fbc77cff8a43b0475b2bf7397889cbe1ab224d1579a1

    # Change directories to cache
    w_try_cd "${W_CACHE}/${W_PACKAGE}"

    # Install PWSH Wrapper
    w_try_cp_dll "${file1}" "${W_SYSTEM32_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    if [ "${W_ARCH}" = "win64" ]; then
        w_try_cp_dll "${file2}" "${W_SYSTEM64_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    fi

    # Install profile.ps1 for wrapper
    w_try cp "${file3}" "${W_PROGRAMS_UNIX}/PowerShell/7/${file3}"

    w_override_dlls native powershell.exe
}
