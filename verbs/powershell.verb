# Metadata for PowerShell Wrapper
w_metadata powershell dlls \
    title="PowerShell Wrapper For Wine" \
    publisher="ProjectSynchro" \
    year="2024" \
    media="download" \
    file1="powershell32.exe" \
    file2="powershell64.exe" \
    file3="profile.ps1"

load_powershell()
{
    #w_do_call powershell_core

    # Download PowerShell Wrapper 32bit exe
    w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/v2.2.0/powershell32.exe" 1787a2c8a8e7309d83c9e377c514800d4592f5fb25111cbcdc7a82c97112bbd6

    if [ "${W_ARCH}" = "win64" ]; then
        # Download PowerShell Wrapper 64bit exe
        w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/v2.2.0/powershell64.exe" 52cd3eb1950afc082391a99bb482326f12eac9601d1e5434a6291ea749ec3bfb
    fi

    # Download PowerShell Wrapper profile.ps1
    w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/v2.2.0/profile.ps1" d596d646e4bf835a996d5c5b653f68ff5dfde4ceb298b5fbe8b634b330333f7e

    # Change directories to cache
    w_try_cd "${W_CACHE}/${W_PACKAGE}"

    # Install PWSH Wrapper

    # Disable SC2154 due to shellcheck not knowing metadata is sourced before this function is run
    # shellcheck disable=SC2154
    w_try_cp_dll "${file1}" "${W_SYSTEM32_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    if [ "${W_ARCH}" = "win64" ]; then
        # shellcheck disable=SC2154
        w_try_cp_dll "${file2}" "${W_SYSTEM64_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    fi

    # Install profile.ps1 for wrapper
    if [ "${W_ARCH}" = "win64" ]; then
        # shellcheck disable=SC2154
        w_try cp "${file3}" "${W_PROGRAMW6432_UNIX}/PowerShell/7/${file3}"
    else
        # shellcheck disable=SC2154
        w_try cp "${file3}" "${W_PROGRAMS_UNIX}/PowerShell/7/${file3}"
    fi

    w_override_dlls native powershell.exe
}
