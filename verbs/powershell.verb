# Metadata for PowerShell Wrapper
w_metadata powershell dlls \
    title="PowerShell Wrapper For Wine" \
    publisher="ProjectSynchro" \
    year="2024" \
    media="download" \
    file1="powershell32.exe" \
    file2="powershell64.exe" \
    file3="profile.ps1"

load_powershell()
{
    #w_do_call powershell_core

    _W_powershell_version="$(w_get_github_latest_release projectsynchro powershell-wrapper-for-wine)"

    # Download PowerShell Wrapper 32bit exe
    w_linkcheck_ignore=1 w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/${_W_powershell_version}/powershell32.exe"

    if [ "${W_ARCH}" = "win64" ]; then
        # Download PowerShell Wrapper 64bit exe
        w_linkcheck_ignore=1 w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/${_W_powershell_version}/powershell64.exe"
    fi

    # Download PowerShell Wrapper profile.ps1
    w_linkcheck_ignore=1 w_download "https://github.com/ProjectSynchro/powershell-wrapper-for-wine/releases/download/${_W_powershell_version}/profile.ps1"

    # Change directories to cache
    w_try_cd "${W_CACHE}/${W_PACKAGE}"

    # Install PWSH Wrapper

    # Disable SC2154 due to shellcheck not knowing metadata is sourced before this function is run
    # shellcheck disable=SC2154
    w_try_cp_dll "${file1}" "${W_SYSTEM32_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    if [ "${W_ARCH}" = "win64" ]; then
        # shellcheck disable=SC2154
        w_try_cp_dll "${file2}" "${W_SYSTEM64_DLLS}/WindowsPowerShell/v1.0/powershell.exe"
    fi

    # Install profile.ps1 for wrapper
    if [ "${W_ARCH}" = "win64" ]; then
        # shellcheck disable=SC2154
        w_try cp "${file3}" "${W_PROGRAMW6432_UNIX}/PowerShell/7/${file3}"
    else
        # shellcheck disable=SC2154
        w_try cp "${file3}" "${W_PROGRAMS_UNIX}/PowerShell/7/${file3}"
    fi

    w_override_dlls native powershell.exe

    unset _W_powershell_version
}
